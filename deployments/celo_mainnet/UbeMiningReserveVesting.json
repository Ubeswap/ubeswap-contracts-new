{
  "address": "0xAe4634bE8c69Ff602e6Dd9a1e3C5cEcCa3502968",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "beneficiaryAddress",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "startTimestamp",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "durationSeconds",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "intervalSeconds",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Released",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "beneficiary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "duration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "interval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "release",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "releaseAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "released",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "start",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "timestamp",
          "type": "uint64"
        }
      ],
      "name": "vestedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x0dd27c55df0bda77045419b7ec33ca99b8172937498868e91e38554ca052204c",
  "receipt": {
    "to": null,
    "from": "0x2c2bc76B97BCe84A5a9c6e2835AB13306B964cf1",
    "contractAddress": "0xAe4634bE8c69Ff602e6Dd9a1e3C5cEcCa3502968",
    "transactionIndex": 0,
    "gasUsed": "760837",
    "logsBloom": "0x
    "blockHash": "0x286a39b3101f36a7536eda54b7b5979d9da4ef2abf3e61c4461d996a3e19d30f",
    "transactionHash": "0x0dd27c55df0bda77045419b7ec33ca99b8172937498868e91e38554ca052204c",
    "logs": [],
    "blockNumber": 24590401,
    "cumulativeGasUsed": "760837",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x71e26d0E519D14591b9dE9a0fE9513A398101490",
    "0xC4294309894279c5722681Ca2A47D4D3bcb7fA91",
    1710504000,
    94348800,
    604800
  ],
  "numDeployments": 1,
  "solcInputHash": "5f13b079ee82829341d727999ffcda44",
  "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"beneficiaryAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"durationSeconds\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"intervalSeconds\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Released\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"releaseAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"beneficiary()\":{\"details\":\"Getter for the beneficiary address.\"},\"constructor\":{\"details\":\"Set the token, beneficiary, start timestamp, vesting duration and release interval of the vesting wallet.\"},\"duration()\":{\"details\":\"Getter for the vesting duration.\"},\"interval()\":{\"details\":\"Getter for the vesting interval.\"},\"release()\":{\"details\":\"Release the tokens that have already vested. Emits a {Released} event.\"},\"releaseAmount(uint256)\":{\"details\":\"Release the tokens that have already vested. Emits a {Release} event.\"},\"released()\":{\"details\":\"Amount of eth already released\"},\"start()\":{\"details\":\"Getter for the start timestamp.\"},\"vestedAmount(uint64)\":{\"details\":\"Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"withdraw(address,address,uint256)\":{\"notice\":\"Recovery function\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vestings/UbeMiningReserveVesting.sol\":\"UbeMiningReserveVesting\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/openzeppelin-solidity/contracts/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(\\n            address(this).balance >= amount,\\n            \\\"Address: insufficient balance\\\"\\n        );\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(\\n            success,\\n            \\\"Address: unable to send value, recipient may have reverted\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data)\\n        internal\\n        returns (bytes memory)\\n    {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return\\n            functionCallWithValue(\\n                target,\\n                data,\\n                value,\\n                \\\"Address: low-level call with value failed\\\"\\n            );\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(\\n            address(this).balance >= value,\\n            \\\"Address: insufficient balance for call\\\"\\n        );\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) =\\n            target.call{value: value}(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data)\\n        internal\\n        view\\n        returns (bytes memory)\\n    {\\n        return\\n            functionStaticCall(\\n                target,\\n                data,\\n                \\\"Address: low-level static call failed\\\"\\n            );\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data)\\n        internal\\n        returns (bytes memory)\\n    {\\n        return\\n            functionDelegateCall(\\n                target,\\n                data,\\n                \\\"Address: low-level delegate call failed\\\"\\n            );\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) private pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe2c9a94ae491a234d92a1beac78ecce500eaf4e5ab285c87ec74ac073c128935\",\"license\":\"MIT\"},\"contracts/openzeppelin-solidity/contracts/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"contracts/openzeppelin-solidity/contracts/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount)\\n        external\\n        returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\\n\",\"keccak256\":\"0x1a3fe05486ba5f5dbaa5fd9b8bdef2231a8675fb1fee2da87b01ac753837271f\",\"license\":\"MIT\"},\"contracts/openzeppelin-solidity/contracts/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a >= b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow, so we distribute\\n        return (a / 2) + (b / 2) + (((a % 2) + (b % 2)) / 2);\\n    }\\n}\\n\",\"keccak256\":\"0x4b6df8c606deac20cbad65d8e59ff1dd0e6b8858f834c4e7547e9e119a8931d0\",\"license\":\"MIT\"},\"contracts/openzeppelin-solidity/contracts/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(\\n            token,\\n            abi.encodeWithSelector(token.transfer.selector, to, value)\\n        );\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(\\n            token,\\n            abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\\n        );\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(\\n            token,\\n            abi.encodeWithSelector(token.approve.selector, spender, value)\\n        );\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(\\n            token,\\n            abi.encodeWithSelector(\\n                token.approve.selector,\\n                spender,\\n                newAllowance\\n            )\\n        );\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(\\n                oldAllowance >= value,\\n                \\\"SafeERC20: decreased allowance below zero\\\"\\n            );\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(\\n                token,\\n                abi.encodeWithSelector(\\n                    token.approve.selector,\\n                    spender,\\n                    newAllowance\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata =\\n            address(token).functionCall(\\n                data,\\n                \\\"SafeERC20: low-level call failed\\\"\\n            );\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(\\n                abi.decode(returndata, (bool)),\\n                \\\"SafeERC20: ERC20 operation did not succeed\\\"\\n            );\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2958b21bad48ed44a0454b59952260315951a8ff51bb985b76e54642ca38b058\",\"license\":\"MIT\"},\"contracts/vestings/UbeMiningReserveVesting.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Ubeswap Mining Reserve Vesting\\npragma solidity ^0.8.9;\\n\\nimport \\\"../openzeppelin-solidity/contracts/SafeERC20.sol\\\";\\nimport \\\"../openzeppelin-solidity/contracts/Address.sol\\\";\\nimport \\\"../openzeppelin-solidity/contracts/Context.sol\\\";\\nimport \\\"../openzeppelin-solidity/contracts/Math.sol\\\";\\n\\ncontract UbeMiningReserveVesting is Context {\\n    event Released(uint256 amount);\\n\\n    uint256 private _released;\\n    address private immutable _token;\\n    address private immutable _beneficiary;\\n    uint64 private immutable _start;\\n    uint64 private immutable _duration;\\n    uint64 private immutable _interval;\\n\\n    /**\\n     * @dev Set the token, beneficiary, start timestamp, vesting duration and release interval of the vesting wallet.\\n     */\\n    constructor(\\n        address token,\\n        address beneficiaryAddress,\\n        uint64 startTimestamp,\\n        uint64 durationSeconds,\\n        uint64 intervalSeconds\\n    ) {\\n        require(token != address(0), \\\"invalid token\\\");\\n        require(beneficiaryAddress != address(0), \\\"invalid beneficiary\\\");\\n        _token = token;\\n        _beneficiary = beneficiaryAddress;\\n        _start = startTimestamp;\\n        _duration = durationSeconds;\\n        _interval = intervalSeconds;\\n    }\\n\\n    /**\\n     * @dev Getter for the beneficiary address.\\n     */\\n    function beneficiary() public view virtual returns (address) {\\n        return _beneficiary;\\n    }\\n\\n    /**\\n     * @dev Getter for the start timestamp.\\n     */\\n    function start() public view virtual returns (uint256) {\\n        return _start;\\n    }\\n\\n    /**\\n     * @dev Getter for the vesting duration.\\n     */\\n    function duration() public view virtual returns (uint256) {\\n        return _duration;\\n    }\\n\\n    /**\\n     * @dev Getter for the vesting interval.\\n     */\\n    function interval() public view virtual returns (uint256) {\\n        return _interval;\\n    }\\n\\n    /**\\n     * @dev Amount of eth already released\\n     */\\n    function released() public view virtual returns (uint256) {\\n        return _released;\\n    }\\n\\n    /**\\n     * @dev Release the tokens that have already vested.\\n     *\\n     * Emits a {Released} event.\\n     */\\n    function release() public virtual {\\n        uint256 releasable = vestedAmount(uint64(block.timestamp)) - released();\\n        require(releasable > 0, \\\"Release: No vestable amount\\\");\\n        _released += releasable;\\n        emit Released(releasable);\\n        SafeERC20.safeTransfer(IERC20(_token), beneficiary(), releasable);\\n    }\\n\\n    /**\\n     * @dev Release the tokens that have already vested.\\n     *\\n     * Emits a {Release} event.\\n     */\\n    function releaseAmount(uint256 amount) public virtual {\\n        uint256 releasable = vestedAmount(uint64(block.timestamp)) - released();\\n        require(releasable > 0, \\\"Release: No vestable amount\\\");\\n        require(amount > 0, \\\"Release: amount > 0\\\");\\n        require(amount <= releasable, \\\"Release: amount <= releasable\\\");\\n\\n        _released += amount;\\n        emit Released(amount);\\n        SafeERC20.safeTransfer(IERC20(_token), beneficiary(), amount);\\n    }\\n\\n    /**\\n     * @dev Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve.\\n     */\\n    function vestedAmount(uint64 timestamp) public view virtual returns (uint256) {\\n        return _vestingSchedule(IERC20(_token).balanceOf(address(this)) + released(), timestamp);\\n    }\\n\\n    /**\\n     * Recovery function\\n     */\\n    function withdraw(\\n        address to,\\n        address token,\\n        uint256 amount\\n    ) public returns (bool success) {\\n        require(_beneficiary == msg.sender, \\\"only beneficiary\\\");\\n        require(_token != token, \\\"invalid token\\\");\\n        if (token == address(0)) {\\n            (bool result, ) = to.call{value: amount}(\\\"\\\");\\n            return result;\\n        }\\n        IERC20(token).transfer(to, amount);\\n        return true;\\n    }\\n\\n\\n    /**\\n     * @dev Virtual implementation of the vesting formula. This returns the amout vested, as a function of time, for\\n     * an asset given its total historical allocation.\\n     */\\n    function _vestingSchedule(uint256 totalAllocation, uint64 timestamp) internal view virtual returns (uint256) {\\n        if (timestamp < start()) {\\n            return 0;\\n        } else if (timestamp > start() + duration()) {\\n            return totalAllocation;\\n        } else {\\n            // totalAllocation = balance + released\\n            uint256 elapsedFromStart = timestamp - start();\\n            uint256 vestingCount = duration() / interval();\\n            uint256 vestingAmount = totalAllocation / vestingCount;\\n            uint256 passedIntervalCount = elapsedFromStart / interval();\\n            return passedIntervalCount * vestingAmount;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd0a2005eda964c808b0e80d2d9d594af96f02b7164ca66a5cec3109853ec6642\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6101206040523480156200001257600080fd5b5060405162000ef438038062000ef4833981016040819052620000359162000142565b6001600160a01b038516620000815760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b2103a37b5b2b760991b60448201526064015b60405180910390fd5b6001600160a01b038416620000d95760405162461bcd60e51b815260206004820152601360248201527f696e76616c69642062656e656669636961727900000000000000000000000000604482015260640162000078565b6001600160a01b039485166080529290931660a0526001600160401b0390811660c05291821660e0521661010052620001b2565b80516001600160a01b03811681146200012557600080fd5b919050565b80516001600160401b03811681146200012557600080fd5b600080600080600060a086880312156200015b57600080fd5b62000166866200010d565b945062000176602087016200010d565b935062000186604087016200012a565b925062000196606087016200012a565b9150620001a6608087016200012a565b90509295509295909350565b60805160a05160c05160e05161010051610cb86200023c600039600081816101440152818161078d01526107f601526000818160c00152818161070a01526107b1015260006104f8015260008181610110015281816103c4015281816104c5015261051f0152600081816101c8015281816103a3015281816104a401526105940152610cb86000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806386d1a69f1161006657806386d1a69f1461013a578063947a36fb146101425780639613252114610172578063be9a65551461017a578063d9caed121461018257600080fd5b80630a17b06b146100985780630fb5a6b4146100be5780632278f36b146100ee57806338af3eed14610103575b600080fd5b6100ab6100a6366004610ac4565b6101a5565b6040519081526020015b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166100ab565b6101016100fc366004610aee565b610251565b005b6040516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001681526020016100b5565b6101016103ed565b7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166100ab565b6000546100ab565b6100ab6104ed565b610195610190366004610b23565b61051b565b60405190151581526020016100b5565b600061024b6101b360005490565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610217573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023b9190610b5f565b6102459190610b8e565b836106e5565b92915050565b6000805461025e426101a5565b6102689190610ba1565b9050600081116102bf5760405162461bcd60e51b815260206004820152601b60248201527f52656c656173653a204e6f207665737461626c6520616d6f756e74000000000060448201526064015b60405180910390fd5b600082116103055760405162461bcd60e51b8152602060048201526013602482015272052656c656173653a20616d6f756e74203e203606c1b60448201526064016102b6565b808211156103555760405162461bcd60e51b815260206004820152601d60248201527f52656c656173653a20616d6f756e74203c3d2072656c65617361626c6500000060448201526064016102b6565b816000808282546103669190610b8e565b90915550506040518281527ffb81f9b30d73d830c3544b34d827c08142579ee75710b490bab0b3995468c5659060200160405180910390a16103e97f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000084610833565b5050565b600080546103fa426101a5565b6104049190610ba1565b9050600081116104565760405162461bcd60e51b815260206004820152601b60248201527f52656c656173653a204e6f207665737461626c6520616d6f756e74000000000060448201526064016102b6565b806000808282546104679190610b8e565b90915550506040518181527ffb81f9b30d73d830c3544b34d827c08142579ee75710b490bab0b3995468c5659060200160405180910390a16104ea7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000083610833565b50565b67ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146105885760405162461bcd60e51b815260206004820152601060248201526f6f6e6c792062656e656669636961727960801b60448201526064016102b6565b826001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316036105f95760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b2103a37b5b2b760991b60448201526064016102b6565b6001600160a01b038316610665576000846001600160a01b03168360405160006040518083038185875af1925050503d8060008114610654576040519150601f19603f3d011682016040523d82523d6000602084013e610659565b606091505b509092506106de915050565b60405163a9059cbb60e01b81526001600160a01b0385811660048301526024820184905284169063a9059cbb906044016020604051808303816000875af11580156106b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d89190610bb4565b50600190505b9392505050565b60006106ef6104ed565b8267ffffffffffffffff1610156107085750600061024b565b7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff1661073b6104ed565b6107459190610b8e565b8267ffffffffffffffff16111561075d57508161024b565b60006107676104ed565b61077b9067ffffffffffffffff8516610ba1565b905060006107d667ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116907f000000000000000000000000000000000000000000000000000000000000000016610bd6565b905060006107e48287610bd6565b9050600061081c67ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001685610bd6565b90506108288282610bf8565b979650505050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261088590849061088a565b505050565b60006108df826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661095c9092919063ffffffff16565b80519091501561088557808060200190518101906108fd9190610bb4565b6108855760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102b6565b606061096b8484600085610973565b949350505050565b6060824710156109d45760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016102b6565b843b610a225760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102b6565b600080866001600160a01b03168587604051610a3e9190610c33565b60006040518083038185875af1925050503d8060008114610a7b576040519150601f19603f3d011682016040523d82523d6000602084013e610a80565b606091505b509150915061082882828660608315610a9a5750816106de565b825115610aaa5782518084602001fd5b8160405162461bcd60e51b81526004016102b69190610c4f565b600060208284031215610ad657600080fd5b813567ffffffffffffffff811681146106de57600080fd5b600060208284031215610b0057600080fd5b5035919050565b80356001600160a01b0381168114610b1e57600080fd5b919050565b600080600060608486031215610b3857600080fd5b610b4184610b07565b9250610b4f60208501610b07565b9150604084013590509250925092565b600060208284031215610b7157600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561024b5761024b610b78565b8181038181111561024b5761024b610b78565b600060208284031215610bc657600080fd5b815180151581146106de57600080fd5b600082610bf357634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761024b5761024b610b78565b60005b83811015610c2a578181015183820152602001610c12565b50506000910152565b60008251610c45818460208701610c0f565b9190910192915050565b6020815260008251806020840152610c6e816040850160208701610c0f565b601f01601f1916919091016040019291505056fea2646970667358221220e6040299116fd1c36579e340b80b86bee5fddbca36bc36e0dc25094ec67aba6664736f6c63430008170033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c806386d1a69f1161006657806386d1a69f1461013a578063947a36fb146101425780639613252114610172578063be9a65551461017a578063d9caed121461018257600080fd5b80630a17b06b146100985780630fb5a6b4146100be5780632278f36b146100ee57806338af3eed14610103575b600080fd5b6100ab6100a6366004610ac4565b6101a5565b6040519081526020015b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166100ab565b6101016100fc366004610aee565b610251565b005b6040516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001681526020016100b5565b6101016103ed565b7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166100ab565b6000546100ab565b6100ab6104ed565b610195610190366004610b23565b61051b565b60405190151581526020016100b5565b600061024b6101b360005490565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610217573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023b9190610b5f565b6102459190610b8e565b836106e5565b92915050565b6000805461025e426101a5565b6102689190610ba1565b9050600081116102bf5760405162461bcd60e51b815260206004820152601b60248201527f52656c656173653a204e6f207665737461626c6520616d6f756e74000000000060448201526064015b60405180910390fd5b600082116103055760405162461bcd60e51b8152602060048201526013602482015272052656c656173653a20616d6f756e74203e203606c1b60448201526064016102b6565b808211156103555760405162461bcd60e51b815260206004820152601d60248201527f52656c656173653a20616d6f756e74203c3d2072656c65617361626c6500000060448201526064016102b6565b816000808282546103669190610b8e565b90915550506040518281527ffb81f9b30d73d830c3544b34d827c08142579ee75710b490bab0b3995468c5659060200160405180910390a16103e97f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000084610833565b5050565b600080546103fa426101a5565b6104049190610ba1565b9050600081116104565760405162461bcd60e51b815260206004820152601b60248201527f52656c656173653a204e6f207665737461626c6520616d6f756e74000000000060448201526064016102b6565b806000808282546104679190610b8e565b90915550506040518181527ffb81f9b30d73d830c3544b34d827c08142579ee75710b490bab0b3995468c5659060200160405180910390a16104ea7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000083610833565b50565b67ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146105885760405162461bcd60e51b815260206004820152601060248201526f6f6e6c792062656e656669636961727960801b60448201526064016102b6565b826001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316036105f95760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b2103a37b5b2b760991b60448201526064016102b6565b6001600160a01b038316610665576000846001600160a01b03168360405160006040518083038185875af1925050503d8060008114610654576040519150601f19603f3d011682016040523d82523d6000602084013e610659565b606091505b509092506106de915050565b60405163a9059cbb60e01b81526001600160a01b0385811660048301526024820184905284169063a9059cbb906044016020604051808303816000875af11580156106b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d89190610bb4565b50600190505b9392505050565b60006106ef6104ed565b8267ffffffffffffffff1610156107085750600061024b565b7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff1661073b6104ed565b6107459190610b8e565b8267ffffffffffffffff16111561075d57508161024b565b60006107676104ed565b61077b9067ffffffffffffffff8516610ba1565b905060006107d667ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116907f000000000000000000000000000000000000000000000000000000000000000016610bd6565b905060006107e48287610bd6565b9050600061081c67ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001685610bd6565b90506108288282610bf8565b979650505050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261088590849061088a565b505050565b60006108df826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661095c9092919063ffffffff16565b80519091501561088557808060200190518101906108fd9190610bb4565b6108855760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102b6565b606061096b8484600085610973565b949350505050565b6060824710156109d45760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016102b6565b843b610a225760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102b6565b600080866001600160a01b03168587604051610a3e9190610c33565b60006040518083038185875af1925050503d8060008114610a7b576040519150601f19603f3d011682016040523d82523d6000602084013e610a80565b606091505b509150915061082882828660608315610a9a5750816106de565b825115610aaa5782518084602001fd5b8160405162461bcd60e51b81526004016102b69190610c4f565b600060208284031215610ad657600080fd5b813567ffffffffffffffff811681146106de57600080fd5b600060208284031215610b0057600080fd5b5035919050565b80356001600160a01b0381168114610b1e57600080fd5b919050565b600080600060608486031215610b3857600080fd5b610b4184610b07565b9250610b4f60208501610b07565b9150604084013590509250925092565b600060208284031215610b7157600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561024b5761024b610b78565b8181038181111561024b5761024b610b78565b600060208284031215610bc657600080fd5b815180151581146106de57600080fd5b600082610bf357634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761024b5761024b610b78565b60005b83811015610c2a578181015183820152602001610c12565b50506000910152565b60008251610c45818460208701610c0f565b9190910192915050565b6020815260008251806020840152610c6e816040850160208701610c0f565b601f01601f1916919091016040019291505056fea2646970667358221220e6040299116fd1c36579e340b80b86bee5fddbca36bc36e0dc25094ec67aba6664736f6c63430008170033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "beneficiary()": {
        "details": "Getter for the beneficiary address."
      },
      "constructor": {
        "details": "Set the token, beneficiary, start timestamp, vesting duration and release interval of the vesting wallet."
      },
      "duration()": {
        "details": "Getter for the vesting duration."
      },
      "interval()": {
        "details": "Getter for the vesting interval."
      },
      "release()": {
        "details": "Release the tokens that have already vested. Emits a {Released} event."
      },
      "releaseAmount(uint256)": {
        "details": "Release the tokens that have already vested. Emits a {Release} event."
      },
      "released()": {
        "details": "Amount of eth already released"
      },
      "start()": {
        "details": "Getter for the start timestamp."
      },
      "vestedAmount(uint64)": {
        "details": "Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "withdraw(address,address,uint256)": {
        "notice": "Recovery function"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1457,
        "contract": "contracts/vestings/UbeMiningReserveVesting.sol:UbeMiningReserveVesting",
        "label": "_released",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}